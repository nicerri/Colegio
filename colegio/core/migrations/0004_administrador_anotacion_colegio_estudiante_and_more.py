# Generated by Django 4.2.1 on 2023-06-20 04:51

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('core', '0003_usuario'),
    ]

    operations = [
        migrations.CreateModel(
            name='Administrador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('admin_id', models.CharField(max_length=10, unique=True)),
                ('telefono', models.CharField(max_length=15)),
                ('cargo', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_query_name='administrador', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_query_name='administrador', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Anotacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(null=True)),
                ('mensaje', models.TextField()),
                ('remitente', models.CharField(max_length=100)),
                ('asunto', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Colegio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('direccion', models.CharField(max_length=200)),
                ('telefono', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('director', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Estudiante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('fecha_nacimiento', models.DateField()),
                ('genero', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino'), ('O', 'Otro')], max_length=1)),
                ('direccion', models.CharField(max_length=200)),
                ('telefono', models.CharField(max_length=15)),
                ('correo', models.EmailField(max_length=254)),
            ],
        ),
        migrations.DeleteModel(
            name='Alumno',
        ),
        migrations.DeleteModel(
            name='Anotaciones',
        ),
        migrations.DeleteModel(
            name='Curso',
        ),
        migrations.DeleteModel(
            name='Usuario',
        ),
        migrations.RemoveField(
            model_name='apoderado',
            name='apmaterno',
        ),
        migrations.RemoveField(
            model_name='apoderado',
            name='appaterno',
        ),
        migrations.RemoveField(
            model_name='apoderado',
            name='contraseña',
        ),
        migrations.RemoveField(
            model_name='apoderado',
            name='id_apoderado',
        ),
        migrations.RemoveField(
            model_name='apoderado',
            name='nombre_usuario',
        ),
        migrations.RemoveField(
            model_name='apoderado',
            name='primer_nombre',
        ),
        migrations.RemoveField(
            model_name='apoderado',
            name='segundo_nombre',
        ),
        migrations.RemoveField(
            model_name='asistencia',
            name='estado',
        ),
        migrations.RemoveField(
            model_name='asistencia',
            name='id_asistencia',
        ),
        migrations.RemoveField(
            model_name='nota',
            name='calificacion',
        ),
        migrations.RemoveField(
            model_name='profesor',
            name='apmaterno',
        ),
        migrations.RemoveField(
            model_name='profesor',
            name='appaterno',
        ),
        migrations.RemoveField(
            model_name='profesor',
            name='primer_nombre',
        ),
        migrations.RemoveField(
            model_name='profesor',
            name='segundo_nombre',
        ),
        migrations.AddField(
            model_name='apoderado',
            name='correo',
            field=models.EmailField(default='example@example.com', max_length=254),
        ),
        migrations.AddField(
            model_name='apoderado',
            name='direccion',
            field=models.CharField(default='Dirección por defecto', max_length=200),
        ),
        migrations.AddField(
            model_name='apoderado',
            name='id',
            field=models.AutoField(default=0, primary_key=True, serialize=False),
        ),
        migrations.AddField(
            model_name='apoderado',
            name='nombre',
            field=models.CharField(default=True, max_length=100),
        ),
        migrations.AddField(
            model_name='apoderado',
            name='telefono',
            field=models.CharField(default='000000000', max_length=15),
        ),
        migrations.AddField(
            model_name='asistencia',
            name='id',
            field=models.AutoField(default=None, primary_key=True, serialize=False),
        ),
        migrations.AddField(
            model_name='asistencia',
            name='presente',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='nota',
            name='asignatura',
            field=models.CharField(default='Asignatura desconocida', max_length=100),
        ),
        migrations.AddField(
            model_name='nota',
            name='fecha',
            field=models.DateField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='nota',
            name='profesor',
            field=models.CharField(max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='nota',
            name='tipo_evaluacion',
            field=models.CharField(max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='nota',
            name='valor',
            field=models.DecimalField(decimal_places=2, max_digits=5, null=True),
        ),
        migrations.AddField(
            model_name='profesor',
            name='correo',
            field=models.EmailField(default='example@example.com', max_length=254),
        ),
        migrations.AddField(
            model_name='profesor',
            name='especialidad',
            field=models.CharField(max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='profesor',
            name='nombre',
            field=models.CharField(max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='asistencia',
            name='fecha',
            field=models.DateField(null=True),
        ),
        migrations.AlterField(
            model_name='nota',
            name='id_nota',
            field=models.AutoField(default=None, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='profesor',
            name='id_profesor',
            field=models.AutoField(default=None, primary_key=True, serialize=False),
        ),
        migrations.AddField(
            model_name='colegio',
            name='estudiantes',
            field=models.ManyToManyField(related_name='colegios', to='core.estudiante'),
        ),
        migrations.AddField(
            model_name='anotacion',
            name='estudiante',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anotaciones', to='core.estudiante'),
        ),
        migrations.AddField(
            model_name='asistencia',
            name='estudiante',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='asistencias', to='core.estudiante'),
        ),
        migrations.AddField(
            model_name='nota',
            name='estudiante',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='notas', to='core.estudiante'),
        ),
    ]
